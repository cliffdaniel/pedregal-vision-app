"use strict";(self.webpackChunknextbase=self.webpackChunknextbase||[]).push([[8429],{"./src/components/admin/molecules/FormRow.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FormRow_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),utils=__webpack_require__("./src/lib/utils.ts");const FormRow=({children,className,gap="gap-4"})=>(0,jsx_runtime.jsx)("div",{className:(0,utils.cn)("flex flex-wrap",gap,className),children:Array.isArray(children)?children.map(((child,index)=>(0,jsx_runtime.jsx)("div",{className:"flex-1 min-w-0",children:child},index))):(0,jsx_runtime.jsx)("div",{className:"flex-1 min-w-0",children})});FormRow.__docgenInfo={description:"",methods:[],displayName:"FormRow",props:{children:{required:!0,tsType:{name:"ReactNode"},description:""},className:{required:!1,tsType:{name:"string"},description:""},gap:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"'gap-4'",computed:!1}}}};var FormField=__webpack_require__("./src/components/admin/molecules/FormField.tsx"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const FormRow_stories={title:"Admin/Molecules/FormRow",component:FormRow,tags:["autodocs"]},Default={render:function FormRowStory(){const[start,setStart]=(0,react.useState)(""),[end,setEnd]=(0,react.useState)(""),[status,setStatus]=(0,react.useState)("");return(0,jsx_runtime.jsxs)(FormRow,{children:[(0,jsx_runtime.jsx)(FormField.z,{id:"start",label:"Start Date",type:"text",value:start,onChange:setStart}),(0,jsx_runtime.jsx)(FormField.z,{id:"end",label:"End Date",type:"text",value:end,onChange:setEnd}),(0,jsx_runtime.jsx)(FormField.z,{id:"status",label:"Status",type:"select",value:status,onChange:v=>{"string"==typeof v&&setStatus(v)},options:[{label:"Open",value:"open"},{label:"Closed",value:"closed"}]})]})}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: function FormRowStory() {\n    const [start, setStart] = useState(\'\');\n    const [end, setEnd] = useState(\'\');\n    const [status, setStatus] = useState(\'\');\n    return <FormRow>\n                <FormField id="start" label="Start Date" type="text" value={start} onChange={setStart} />\n                <FormField id="end" label="End Date" type="text" value={end} onChange={setEnd} />\n                <FormField id="status" label="Status" type="select" value={status} onChange={v => {\n        if (typeof v === \'string\') setStatus(v);\n      }} options={[{\n        label: \'Open\',\n        value: \'open\'\n      }, {\n        label: \'Closed\',\n        value: \'closed\'\n      }]} />\n            </FormRow>;\n  }\n}',...Default.parameters?.docs?.source}}}}}]);