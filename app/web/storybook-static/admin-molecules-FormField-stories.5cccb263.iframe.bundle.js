"use strict";(self.webpackChunknextbase=self.webpackChunknextbase||[]).push([[3873],{"./src/components/admin/molecules/FormField.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Checkbox:()=>Checkbox,Date:()=>Date,Radio:()=>Radio,SelectMultiple:()=>SelectMultiple,SelectSingle:()=>SelectSingle,SwitchField:()=>SwitchField,Text:()=>Text,Textarea:()=>Textarea,Upload:()=>Upload,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_FormField__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/admin/molecules/FormField.tsx"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Admin/Molecules/FormField",component:_FormField__WEBPACK_IMPORTED_MODULE_1__.z,tags:["autodocs"]},Text={render:function TextField(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"name",label:"Name",type:"text",value,onChange:v=>setValue(v),required:!0,labelPosition:"top"})}},Textarea={render:function TextareaField(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"description",label:"Description",type:"textarea",value,onChange:v=>setValue(v),labelPosition:"top"})}},SelectSingle={render:function SelectSingleField(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)("");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"country",label:"Country",type:"select",value,onChange:v=>{"string"==typeof v&&setValue(v)},options:[{label:"USA",value:"us"},{label:"Peru",value:"pe"}],labelPosition:"top"})}},SelectMultiple={render:function SelectMultipleField(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)([]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"languages",label:"Languages",type:"select",value,onChange:v=>{Array.isArray(v)&&setValue(v)},options:[{label:"English",value:"en"},{label:"Spanish",value:"es"},{label:"French",value:"fr"}],multiple:!0,labelPosition:"top"})}},Checkbox={render:function CheckboxField(){const[checked,setChecked]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"agree",label:"Agree to terms",type:"checkbox",checked,onChange:v=>setChecked(v),labelPosition:"right"})}},SwitchField={render:function SwitchField(){const[enabled,setEnabled]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!1);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"newsletter",label:"Subscribe to newsletter",type:"switch",checked:enabled,onChange:v=>setEnabled(v),labelPosition:"right"})}},Radio={render:function RadioField(){const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)("m");return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"gender",label:"Gender",type:"radio",value,onChange:v=>setValue(v),options:[{label:"Male",value:"m"},{label:"Female",value:"f"}],labelPosition:"top"})}},Date={render:function DateField(){const[date,setDate]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"birthday",label:"Birthday",type:"date",value:date,onChange:d=>setDate(d),labelPosition:"top"})}},Upload={render:function UploadField(){const[file,setFile]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"space-y-2",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_FormField__WEBPACK_IMPORTED_MODULE_1__.z,{id:"cv",label:"Upload CV",type:"upload",onChange:f=>setFile(f),labelPosition:"top"}),file&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm text-muted-foreground",children:file.name})]})}},__namedExportsOrder=["Text","Textarea","SelectSingle","SelectMultiple","Checkbox","SwitchField","Radio","Date","Upload"];Text.parameters={...Text.parameters,docs:{...Text.parameters?.docs,source:{originalSource:'{\n  render: function TextField() {\n    const [value, setValue] = useState(\'\');\n    return <FormField id="name" label="Name" type="text" value={value} onChange={v => setValue(v)} required labelPosition="top" />;\n  }\n}',...Text.parameters?.docs?.source}}},Textarea.parameters={...Textarea.parameters,docs:{...Textarea.parameters?.docs,source:{originalSource:'{\n  render: function TextareaField() {\n    const [value, setValue] = useState(\'\');\n    return <FormField id="description" label="Description" type="textarea" value={value} onChange={v => setValue(v)} labelPosition="top" />;\n  }\n}',...Textarea.parameters?.docs?.source}}},SelectSingle.parameters={...SelectSingle.parameters,docs:{...SelectSingle.parameters?.docs,source:{originalSource:"{\n  render: function SelectSingleField() {\n    const [value, setValue] = useState<string>('');\n    return <FormField id=\"country\" label=\"Country\" type=\"select\" value={value} onChange={v => {\n      if (typeof v === 'string') setValue(v);\n    }} options={[{\n      label: 'USA',\n      value: 'us'\n    }, {\n      label: 'Peru',\n      value: 'pe'\n    }]} labelPosition=\"top\" />;\n  }\n}",...SelectSingle.parameters?.docs?.source}}},SelectMultiple.parameters={...SelectMultiple.parameters,docs:{...SelectMultiple.parameters?.docs,source:{originalSource:"{\n  render: function SelectMultipleField() {\n    const [value, setValue] = useState<string[]>([]);\n    return <FormField id=\"languages\" label=\"Languages\" type=\"select\" value={value} onChange={v => {\n      if (Array.isArray(v)) setValue(v);\n    }} options={[{\n      label: 'English',\n      value: 'en'\n    }, {\n      label: 'Spanish',\n      value: 'es'\n    }, {\n      label: 'French',\n      value: 'fr'\n    }]} multiple labelPosition=\"top\" />;\n  }\n}",...SelectMultiple.parameters?.docs?.source}}},Checkbox.parameters={...Checkbox.parameters,docs:{...Checkbox.parameters?.docs,source:{originalSource:'{\n  render: function CheckboxField() {\n    const [checked, setChecked] = useState(false);\n    return <FormField id="agree" label="Agree to terms" type="checkbox" checked={checked} onChange={v => setChecked(v)} labelPosition="right" />;\n  }\n}',...Checkbox.parameters?.docs?.source}}},SwitchField.parameters={...SwitchField.parameters,docs:{...SwitchField.parameters?.docs,source:{originalSource:'{\n  render: function SwitchField() {\n    const [enabled, setEnabled] = useState(false);\n    return <FormField id="newsletter" label="Subscribe to newsletter" type="switch" checked={enabled} onChange={v => setEnabled(v)} labelPosition="right" />;\n  }\n}',...SwitchField.parameters?.docs?.source}}},Radio.parameters={...Radio.parameters,docs:{...Radio.parameters?.docs,source:{originalSource:"{\n  render: function RadioField() {\n    const [value, setValue] = useState('m');\n    return <FormField id=\"gender\" label=\"Gender\" type=\"radio\" value={value} onChange={v => setValue(v)} options={[{\n      label: 'Male',\n      value: 'm'\n    }, {\n      label: 'Female',\n      value: 'f'\n    }]} labelPosition=\"top\" />;\n  }\n}",...Radio.parameters?.docs?.source}}},Date.parameters={...Date.parameters,docs:{...Date.parameters?.docs,source:{originalSource:'{\n  render: function DateField() {\n    const [date, setDate] = useState<Date | undefined>();\n    return <FormField id="birthday" label="Birthday" type="date" value={date} onChange={d => setDate(d)} labelPosition="top" />;\n  }\n}',...Date.parameters?.docs?.source}}},Upload.parameters={...Upload.parameters,docs:{...Upload.parameters?.docs,source:{originalSource:'{\n  render: function UploadField() {\n    const [file, setFile] = useState<File | null>(null);\n    return <div className="space-y-2">\n                <FormField id="cv" label="Upload CV" type="upload" onChange={f => setFile(f)} labelPosition="top" />\n                {file && <p className="text-sm text-muted-foreground">{file.name}</p>}\n            </div>;\n  }\n}',...Upload.parameters?.docs?.source}}}}}]);