"use strict";(self.webpackChunknextbase=self.webpackChunknextbase||[]).push([[7671],{"./node_modules/clsx/dist/clsx.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}__webpack_require__.d(__webpack_exports__,{$:()=>clsx,A:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=clsx},"./src/components/admin/atoms/Skeleton.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Avatar:()=>Avatar,Default:()=>Default,Line:()=>Line,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Skeleton_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),clsx=__webpack_require__("./node_modules/clsx/dist/clsx.mjs");const roundedMap={sm:"rounded-sm",md:"rounded-md",lg:"rounded-lg",full:"rounded-full"},Skeleton=({className,width="100%",height="1rem",rounded="md"})=>(0,jsx_runtime.jsx)("div",{className:(0,clsx.A)("animate-pulse bg-muted",roundedMap[rounded],className),style:{width:"number"==typeof width?`${width}px`:width,height:"number"==typeof height?`${height}px`:height}});Skeleton.__docgenInfo={description:"",methods:[],displayName:"Skeleton",props:{className:{required:!1,tsType:{name:"string"},description:""},width:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"",defaultValue:{value:"'100%'",computed:!1}},height:{required:!1,tsType:{name:"union",raw:"string | number",elements:[{name:"string"},{name:"number"}]},description:"",defaultValue:{value:"'1rem'",computed:!1}},rounded:{required:!1,tsType:{name:"union",raw:"'sm' | 'md' | 'lg' | 'full'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"},{name:"literal",value:"'lg'"},{name:"literal",value:"'full'"}]},description:"",defaultValue:{value:"'md'",computed:!1}}}};const Skeleton_stories={title:"Admin/Atoms/Skeleton",component:Skeleton,tags:["autodocs"],argTypes:{width:{control:"text"},height:{control:"text"},rounded:{control:"select",options:["sm","md","lg","full"]}}},Default={args:{width:"100%",height:"1rem",rounded:"md"}},Avatar={args:{width:48,height:48,rounded:"full"}},Line={args:{width:"60%",height:"0.75rem",rounded:"sm"}},__namedExportsOrder=["Default","Avatar","Line"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    width: '100%',\n    height: '1rem',\n    rounded: 'md'\n  }\n}",...Default.parameters?.docs?.source}}},Avatar.parameters={...Avatar.parameters,docs:{...Avatar.parameters?.docs,source:{originalSource:"{\n  args: {\n    width: 48,\n    height: 48,\n    rounded: 'full'\n  }\n}",...Avatar.parameters?.docs?.source}}},Line.parameters={...Line.parameters,docs:{...Line.parameters?.docs,source:{originalSource:"{\n  args: {\n    width: '60%',\n    height: '0.75rem',\n    rounded: 'sm'\n  }\n}",...Line.parameters?.docs?.source}}}}}]);